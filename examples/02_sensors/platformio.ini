; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; comment out line below to compile all environments
;default_envs = esp8266_release_debug
;default_envs = esp8266_dev_debug, esp8266_release, esp8266_release_debug, esp32_dev_debug, esp32_release, esp32_release_debug, esp32c3, esp32s2
default_envs = esp8266_dev_debug, esp8266_release, esp32_dev_debug, esp32_release
extra_configs =
  user_*.ini
; подключаем дополнительные конфиги platformio в виде user_*.ini файлов
; если вам нужна свой env для сборки, оформляйте его в виде доп ini файлов, они не будут обновляться из репозитория
; подробнее
; https://docs.platformio.org/en/latest/projectconf/section_platformio.html#extra-configs

; extra_scripts = !python LittleFSBuilder.py

[extra]
build_flags =
    !python git_rev_macro.py
    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    -DEMBUI_SMALL_JSON_SIZE=768
    ;-DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='EmbUI_Device-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=2048
    -DEMBUI_USE_SECHEAP
    -DEMBUI_USE_FTP
    -DEMBUI_USE_SSDP
    -DEMBUI_USE_UDP
    -DEMBUI_USE_MQTT
    -DEMBUI_SSDP_NAME='EmbUITest'
    -DEMBUI_SSDP_URLMODEL='https:__I(/)__I(/)github.com/DmytroKorniienko/EmbUI'
    -DEMBUI_SSDP_MODEL='EmbUI'
    -DEMBUI_SSDP_URLMANUF='https:__I(/)__I(/)github.com/DmytroKorniienko/EmbUI'
    -DEMBUI_SSDP_MANUF='kDn'
    -Wl,-gc-sections
    -DVTABLES_IN_FLASH
    -ffunction-sections
    -fdata-sections

[extra32]
build_flags =
    !python git_rev_macro.py
    -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
    ; -DEMBUI_IFACE_DYN_JSON_SIZE=2048
    ; -DEMBUI_SMALL_JSON_SIZE=768
    ;-DEMBUI_CFGSIZE=3072
    -DEMBUI_TZONE=TZ_Etc_GMT
    -DEMBUI_IDPREFIX='EmbUI_Device-'
    -DEMBUI_USE_EXTERNAL_WS_BUFFER=4096
    -DEMBUI_USE_FTP
    -DEMBUI_USE_SSDP
    -DEMBUI_USE_UDP
    -DEMBUI_USE_MQTT
    -DEMBUI_SSDP_NAME='EmbUITest'
    -DEMBUI_SSDP_URLMODEL='https:__I(/)__I(/)github.com/DmytroKorniienko/EmbUI'
    -DEMBUI_SSDP_MODEL='EmbUI'
    -DEMBUI_SSDP_URLMANUF='https:__I(/)__I(/)github.com/DmytroKorniienko/EmbUI'
    -DEMBUI_SSDP_MANUF='kDn'
    -Wl,-gc-sections
    -DVTABLES_IN_FLASH
    -ffunction-sections
    -fdata-sections 

[env]
framework = arduino
board_build.filesystem = littlefs
lib_deps =
    https://github.com/DmytroKorniienko/EmbUI.git@2.6.0
upload_speed = 460800
;monitor_speed = 460800
monitor_speed = 115200 ; must be same as BAUD_RATE (main.h)
monitor_flags =
  --quiet
  --echo
  --eol
    LF
;   --filter
;     colorize
  --filter
    time

[env32]
framework = arduino
board_build.filesystem = littlefs
lib_deps =
    https://github.com/lorol/LITTLEFS.git ; отключить с выходом нового ядра
;monitor_speed = 115200
monitor_speed = 460800
upload_speed = 460800
monitor_flags =
  --quiet
  --echo
  --eol
    LF
;   --filter
;     colorize
  --filter
    time


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:esp8266_release]
platform = espressif8266
board = d1_mini
build_flags =
    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память - каждые 30 секунд
    ${extra.build_flags}
lib_deps =
    ${env.lib_deps}
board_build.ldscript = eagle.flash.4m2m.ld
monitor_filters = esp8266_exception_decoder
extra_scripts = replace_fs.py

; ESP8266 debug version
[env:esp8266_release_debug]
platform = espressif8266
board = nodemcuv2
build_flags =
    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память - каждые 30 секунд
    ${extra.build_flags}
lib_deps =
    ${env.lib_deps}
board_build.ldscript = eagle.flash.4m2m.ld
monitor_filters = esp8266_exception_decoder
;build_type = debug ;
upload_speed = 921600
monitor_port = COM11
upload_port = COM11

; ESP8266 debug version from dev
[env:esp8266_dev_debug]
platform = espressif8266
;platform = espressif8266@2.6.3
board = nodemcuv2
framework = arduino
board_build.filesystem = littlefs
lib_deps =
    https://github.com/DmytroKorniienko/EmbUI.git#dev
board_build.ldscript = eagle.flash.4m2m.ld
upload_speed = 460800
build_flags =
    ${extra.build_flags}
    -DEMBUI_DEBUG
    -DEMBUI_APPASSWORD='1234567890'
    -DEMBUI_PUB_PERIOD=30 ; публикация значений время/память - каждые 30 секунд
monitor_filters = esp8266_exception_decoder
;build_type = debug ;
monitor_port = COM11
upload_port = COM11

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:esp32_release]
platform = espressif32
board = esp32dev
board_build.partitions = esp32_4MiB.csv
build_flags =
    ${extra32.build_flags}
    -DLED_BUILTIN=2
lib_deps =
    ${env32.lib_deps}
monitor_filters = esp32_exception_decoder
extra_scripts = replace_fs.py
upload_speed = 921600
monitor_port = COM9
upload_port = COM9

[env:esp32_release_debug]
platform = espressif32
board = esp32dev
board_build.partitions = esp32_4MiB.csv
build_flags =
    ${extra32.build_flags}
    -DLED_BUILTIN=2
    -DEMBUI_DEBUG
lib_deps =
    ${env32.lib_deps}
monitor_filters = esp32_exception_decoder
extra_scripts = replace_fs.py
monitor_port = COM9
upload_port = COM9

[env:esp32_dev_debug]
platform = espressif32
; platform_packages =
;     framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
;     platformio/tool-esptoolpy @ ~1.30100
board = esp32dev
board_build.partitions = esp32_4MiB.csv
framework = arduino
board_build.filesystem = littlefs
build_flags =
    ${extra32.build_flags}
    -DLED_BUILTIN=2
    -DEMBUI_DEBUG
lib_deps =
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    https://github.com/lorol/LITTLEFS.git
monitor_filters = esp32_exception_decoder
extra_scripts = replace_fs.py
upload_speed = 921600
monitor_port = COM9
upload_port = COM9

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:esp32c3] ; 2mb without OTA
framework = arduino

platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

; platform = espressif32
; platform_packages =
;     toolchain-riscv-esp@file://d:\toolchains\riscv32-esp-elf ; https://github.com/espressif/crosstool-NG - релизы тулчейнов
;     framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
;     platformio/tool-esptoolpy @ ~1.30100

board = esp32dev ; board hack
; board = esp32-c3-devkitm-1
board_build.mcu = esp32c3
board_build.partitions = esp32c3_2MiB.csv
board_build.f_cpu = 160000000L
; board_build.f_flash = 80000000L
; board_build.flash_mode = qio
board_build.arduino.ldscript = esp32c3_out.ld
;build_type = debug
build_flags =
    ${extra32.build_flags}
    ; -DCONFIG_ESP_SYSTEM_MEMPROT_FEATURE=""
    ; -DBOARD_HAS_PSRAM
    -DLED_BUILTIN=3 ; 3,4,5
    ; -mfix-esp32-psram-cache-issue
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ; ${env32.lib_deps}
    https://github.com/DmytroKorniienko/EmbUI.git#dev

monitor_filters = esp32_exception_decoder, default
extra_scripts = replace_fs.py
monitor_speed = 115200
upload_speed = 921600
monitor_port = COM11
upload_port = COM11
; monitor_port = COM17
; upload_port = COM17
monitor_rts = 0
monitor_dtr = 0
; monitor_rts = 1
; monitor_dtr = 1

monitor_flags =
  --quiet
  --echo
  --eol
    LF
  --filter
    time

; debug_tool = jlink
; ; upload_protocol = jlink
; debug_init_break = tbreak setup
; ; debug_speed = 5000

; https://docs.ai-thinker.com/_media/esp32/docs/esp32-c3f_specification.pdf
; https://docs.espressif.com/projects/esp-idf/en/latest/esp32c3/api-guides/jtag-debugging/configure-builtin-jtag.html

; debug_tool = COM14
; debug_port = COM14
debug_tool = custom
debug_server =
  $PLATFORMIO_CORE_DIR/packages/tool-openocd-esp32/bin/openocd
  -f
  $PLATFORMIO_CORE_DIR/packages/tool-openocd-esp32/share/openocd/scripts/board/esp32c3-builtin.cfg

debug_init_break = tbreak setup

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:esp32s2]
framework = arduino

platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

; platform = espressif32
; platform_packages =
;     toolchain-xtensa32s2@file://d:\toolchains\xtensa-esp32s2-elf
;     framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
;     platformio/tool-esptoolpy @ ~1.30100
board = esp32dev
board_build.mcu = esp32s2
; board_build.flash_mode = qio
build_type = debug
build_flags =
    ${extra32.build_flags}
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -DLED_BUILTIN=2
    -DEMBUI_DEBUG
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ; ${env32.lib_deps}
    https://github.com/DmytroKorniienko/ESPAsyncWebServer/#ESPAsyncWebServerMod
    https://github.com/DmytroKorniienko/EmbUI.git#dev
monitor_filters = esp32_exception_decoder
extra_scripts = replace_fs.py
monitor_speed = 115200
upload_protocol = esptool
upload_speed = 921600
monitor_port = COM11
upload_port = COM11

; debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[env:esp32s3]
framework = arduino

platform = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
    ;framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.1.0
    framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git

; platform = espressif32
; platform_packages =
;     toolchain-xtensa32s3@file://d:\toolchains\xtensa-esp32s3-elf
;     framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
;     platformio/tool-esptoolpy @ ~1.30100
board = esp32dev
board_build.mcu = esp32s3
board_build.partitions = esp32s3_8MB.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions
; board_build.flash_mode = qio
; build_type = debug
build_flags =
    ${extra32.build_flags}
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -DLED_BUILTIN=3
    -DLAMP_DEBUG=1
    -DEMBUI_DEBUG
    -DFASTLED_ALLOW_INTERRUPTS=0
    -DINTERRUPT_THRESHOLD=0    
    ; Logging level: 1 = error, 2 = warning, 3 = info, 4 = debug, 5 = verbose
    ;-DCORE_DEBUG_LEVEL=4
    ;-D CONFIG_ARDUHAL_LOG_COLORS=1
lib_deps =
    ; ${env32.lib_deps}
    https://github.com/DmytroKorniienko/EmbUI.git#dev
    https://github.com/FastLED/FastLED.git
monitor_filters = esp32_exception_decoder
extra_scripts = replace_fs.py
upload_protocol = esptool
upload_speed = 921600
monitor_port = COM19
upload_port = COM19
monitor_flags =
  --quiet
  --echo
  --eol
    LF
  --filter
    colorize
  --filter
    time

; debug_tool = jlink
; upload_protocol = jlink
debug_init_break = tbreak setup
; debug_speed = 5000
